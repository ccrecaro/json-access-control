import { Target } from "./objects/targetElements/Target";
import { ObligationOrAdviceExpression } from "./objects/ObligationOrAdviceExpression";
import { Result } from "./objects/Result";
import { RequestCtx } from "./objects/architecture/context/RequestCtx";
import { Expression } from "./objects/expression/Expression";
export declare class Rule {
    private _ruleId;
    private _effect;
    private _description?;
    private _target?;
    private _condition?;
    private _obligationExpressions?;
    private _adviceExpressions?;
    constructor(ruleId: string, effect: effectType, description?: string, target?: Target, condition?: Expression, obligationExpressions?: ObligationOrAdviceExpression[], adviceExpressions?: ObligationOrAdviceExpression[]);
    get ruleId(): string;
    set ruleId(id: string);
    get effect(): effectType;
    set effect(effect: effectType);
    getDescription(): string | undefined;
    set description(description: string);
    getTarget(): Target | undefined;
    set target(target: Target);
    getCondition(): Expression | undefined;
    set condition(condition: Expression);
    getObligationExpressions(): ObligationOrAdviceExpression[] | undefined;
    set obligationExpressions(obligationExpressions: ObligationOrAdviceExpression[]);
    getAdviceExpressions(): ObligationOrAdviceExpression[] | undefined;
    set adviceExpressions(adviceExpressions: ObligationOrAdviceExpression[]);
    evaluate(request: RequestCtx): Result;
    private processObligationsAndAdvices;
}
